// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitmentTaskApp.Database;

#nullable disable

namespace RecruitmentTaskApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecruitmentTaskApp.Entity.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("VacationPackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("VacationPackageId")
                        .HasDatabaseName("IX_Employees_VacationPackageId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("RecruitmentTaskApp.Entity.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("RecruitmentTaskApp.Entity.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateSince")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUntil")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPartialVacation")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .HasDatabaseName("IX_Vacations_EmployeeId");

                    b.HasIndex("EmployeeId", "DateSince", "DateUntil")
                        .HasDatabaseName("IX_Vacations_EmployeeId_DateRange");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("RecruitmentTaskApp.Entity.VacationPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GrantedDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VacationPackages");
                });

            modelBuilder.Entity("RecruitmentTaskApp.Entity.Employee", b =>
                {
                    b.HasOne("RecruitmentTaskApp.Entity.Team", "Team")
                        .WithMany("Employees")
                        .HasForeignKey("TeamId");

                    b.HasOne("RecruitmentTaskApp.Entity.VacationPackage", "VacationPackage")
                        .WithMany("Employees")
                        .HasForeignKey("VacationPackageId");

                    b.Navigation("Team");

                    b.Navigation("VacationPackage");
                });

            modelBuilder.Entity("RecruitmentTaskApp.Entity.Vacation", b =>
                {
                    b.HasOne("RecruitmentTaskApp.Entity.Employee", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RecruitmentTaskApp.Entity.Employee", b =>
                {
                    b.Navigation("Vacations");
                });

            modelBuilder.Entity("RecruitmentTaskApp.Entity.Team", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("RecruitmentTaskApp.Entity.VacationPackage", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
